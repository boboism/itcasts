- model_class = Episode
.row
  .span12
    .row
      .span12
        %h3
          %strong.text-info
            = @episode.title
    .row#content_row
      .span3
        = link_to image_tag(@episode.episode_image.archive.url), "javascript:void(0);", :class => "thumbnail"
      .span9
        %p= @episode.description
        %p
          .btn-group
            - if can? :publish, @episode
              = link_to publish_episode_path(@episode), :method => :put, :class => "btn btn-primary" do
                %i.icon-check.icon-white
                = t('.pubish', default: t("helpers.links.publish"))
            %button.btn#play_video_button
              %i.icon-play
              = t('.play', default: t("helpers.links.play"))
        %p
        %p
          .pull-left
            %i.icon-user
            = model_class.human_attribute_name(:created_by_id)
            = link_to @episode.created_by, user_path(@episode.created_by)
            |
            %i.icon-calendar
            = @episode.created_at.to_date
            /
              |
              %i.icon-comment
              %a{:href => "javascript:void(0);"} comments
              |
              %i.icon-share
              %a{:href => "javascript:void(0);"} shares
            |
            %i.icon-tag
            = model_class.human_attribute_name(:tags)
            - @episode.tag_list.each do |tag|
              = link_to content_tag("span", tag, :class => "label label-info"), root_path("[search][text]" => tag)
          .pull-right
            %i.icon-download-alt
            = link_to content_tag("span", "MP4", :class => "label label-success"), @episode.video.archive.url
    -if can? :read, @episode
      .row#episode_row{:style => "display:none"}
        .span12
          %hr
        .span12
          .video
            %video#episode_video.video-js.vjs-default-skin
              - if @episode.video && @episode.video.archive
                %source{src: @episode.video.archive.url, type: "video/mp4"}
  .span12
    %hr
  .span12
    %ul#episode-tab.nav.nav-tabs
      %li.active
        %a{:href => "#notes_pane"}= model_class.human_attribute_name(:notes)
      - if can? :comment, @episode
        %li
          %a{:href => "#comments_pane"}= model_class.human_attribute_name(:comments)
    .tab-content
      #note_panes.tab-pane.active
        = markdown @episode.notes
      - if can? :comment, @episode
        #comments_pane.tab-pane
